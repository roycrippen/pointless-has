[ { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.size#"
    , "type"      : "size# :: KnownNat n => Unsigned n -> Int"
    , "templateE" : "~SIZE[~TYPO]'sd~LIT[0]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.pack#"
    , "type"      : "pack# :: Unsigned n -> BitVector n"
    , "templateE" : "~ARG[0]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.unpack#"
    , "type"      : "unpack# :: BitVector n -> Unsigned n"
    , "templateE" : "~ARG[0]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.eq#"
    , "type"      : "eq# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] == ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.neq#"
    , "type"      : "neq# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] != ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.lt#"
    , "type"      : "lt# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] < ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.ge#"
    , "type"      : "ge# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] >= ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.gt#"
    , "type"      : "gt# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] > ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.le#"
    , "type"      : "le# :: Unsigned n -> Unsigned n -> Bool"
    , "templateE" : "~ARG[0] <= ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.minBound#"
    , "type"      : "minBound# :: Unsigned n"
    , "templateE" : "~SIZE[~TYPO]'d0"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.maxBound#"
    , "type"      : "maxBound# :: KnownNat n => Unsigned n"
    , "templateE" : "{~LIT[0] {1'b1}}"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.+#"
    , "type"      : "(+#) :: KnownNat n => Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[1] + ~ARG[2]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.-#"
    , "type"      : "(-#) :: KnownNat n => Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[1] - ~ARG[2]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.*#"
    , "type"      : "(*#) :: KnownNat n => Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[1] * ~ARG[2]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.negate#"
    , "type"      : "negate# :: KnownNat n => Unsigned n -> Unsigned n"
    , "templateE" : "- ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.fromInteger#"
    , "type"      : "fromInteger# :: KnownNat n => Integer -> Unsigned n"
    , "templateE" : "$unsigned(~ARG[1][(~LIT[0]-1):0])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.plus#"
    , "type"      : "plus# :: Unsigned m -> Unsigned n -> Unsigned (1 + Max m n)"
    , "templateD" : "assign ~RESULT = ~ARG[0] + ~ARG[1];"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.minus#"
    , "type"      : "minus# :: (KnownNat m, KnownNat n) => Unsigned m -> Unsigned n -> Unsigned (1 + Max m n)"
    , "templateD" : "assign ~RESULT = ~ARG[2] - ~ARG[3];"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.times#"
    , "type"      : "times# :: Unsigned m -> Unsigned n -> Unsigned (m + n)"
    , "templateD" : "assign ~RESULT = ~ARG[0] * ~ARG[1];"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.quot#"
    , "type"      : "quot# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[0] / ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rem#"
    , "type"      : "rem# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[0] % ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.toInteger#"
    , "type"      : "toInteger# :: Unsigned n -> Integer"
    , "templateD" : "assign ~RESULT = $unsigned(~ARG[0]);"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.and#"
    , "type"      : "and# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[0] & ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.or#"
    , "type"      : "or# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[0] | ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.xor#"
    , "type"      : "xor# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "templateE" : "~ARG[0] ^ ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.complement#"
    , "type"      : "complement# :: KnownNat n => Unsigned n -> Unsigned n"
    , "templateE" : "~ ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.shiftL#"
    , "type"      : "shiftL# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "templateE" : "~ARG[1] << ~ARG[2]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.shiftR#"
    , "type"      : "shiftR# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "templateE" : "~ARG[1] >> ~ARG[2]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rotateL#"
    , "type"      : "rotateL# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "templateD" :
"// rotateL begin
logic [2*~LIT[0]-1:0] ~GENSYM[u][0];
assign ~SYM[0] = {~ARG[1],~ARG[1]} << ~ARG[2];
assign ~RESULT = ~SYM[0][~LIT[0]-1 : 0];
// rotateL end"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rotateR#"
    , "type"      : "rotateR# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "templateD" :
"// rotateR begin
logic [2*~LIT[0]-1:0] ~GENSYM[u][0];
assign ~SYM[0] = {~ARG[1],~ARG[1]} >> ~ARG[2];
assign ~RESULT = ~SYM[0][~LIT[0]-1 : 0];
// rotateR end"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.resize#"
    , "type"      : "resize# :: KnownNat m => Unsigned n -> Unsigned m"
    , "templateD" : "assign ~RESULT = $unsigned(~ARG[1]);"
    }
  }
]
