
==================== FINAL INTERFACE ====================
2017-10-26 13:18:32.18398002 UTC

interface pointless-hs-0.1.0.0-GwVh2N5kUKWGOs2l6I0wCu:Parser 8002
  interface hash: e31040251880d8bdf08e0e4f8954dbb6
  ABI hash: fe69cfe01dcb3d2b8bf1f29ce587cbd5
  export-list hash: 8bea3e8d8cc61b6ce9f7d9a8f476d732
  orphan hash: 5a4af3c14bea1d86a229a9cfbe4b8fbc
  flag hash: 98b768f82b68e5d7609c08567665dc92
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parser.cat
  Parser.definition
  Parser.definitionHeader
  Parser.instruction
  Parser.nakedQuotation
  Parser.number
  Parser.program
  Parser.quotation
  Parser.word
  Parser.wordLetter
module dependencies: Interpreter StackManip
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Char 72183c9c72a786c768d574329f0c66fb
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Combinator 1043ef2e7d611405e8cfba488439d00f
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Prim aa5741b3687798626ab8b304ae778581
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.ParserCombinators.Parsec 210b9d7605a419b0319331228e92273a
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.ParserCombinators.Parsec.Prim c1c3ee4c3eb13baea753600678a3bd4e
import  -/  Interpreter df20e2a78c0cc313b17847d5831fa842
  exports: 9e51e7c901fb7af6b7c0f7bd0c19e3be
  Number 7753d0b51849e6e4867a3cb95381bbe1
  Quot 18560b3e9e4119b6d04f09a6cb0e3393
  Quotation 4ae7287873a575fd49745c815c7e7c45
  Symbol 7af97db4476141993cb5811501c24985
8bff70e7a2c5f458c09e850fff9ebf9a
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
13204dbd41c3444633607c87c9447ba2
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
43fbdcef07314b338236288b9036ebce
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
43ada76bdb8a5ba70a03137294e92884
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Parser.$trModule2
                   Parser.$trModule1) -}
9445f373bc371557d557fd8f478326a9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Parser"#) -}
94068b5a32b4591416c958a823627767
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pointless-hs-0.1.0.0-GwVh2N5kUKWGOs2l6I0wCu"#) -}
0f0a33c73f5238b4073988b2e9e36824
  $wdefinition ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((GHC.Base.String, Interpreter.WordP)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ u
                   @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w1 :: (GHC.Base.String, Interpreter.WordP)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.string1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.definition2
                   @ b1
                   w
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parser.$wk
                      @ u
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')) } })
                   w2
                   (\ (x :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    case s2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                    case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                    Parser.$wk
                      @ u
                      @ b1
                      ww1
                      ww5
                      ww6
                      ww7
                      ww3
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')) } })
                   w3) -}
d5073bb9bffe36da9da9b7d75ce8f84c
  $wdefinitionHeader ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ u
                   @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parser.definitionHeader4
                   @ u
                   @ b1
                   w
                   (\ (x :: Interpreter.Value)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.$wdefinitionHeader1
                      @ u
                      x
                      @ b1
                      s2
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x :: Interpreter.Value)
                      (s' :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (error :: Text.Parsec.Error.ParseError)[OneShot] ->
                    let {
                      err :: Text.Parsec.Error.ParseError
                      = case error of wild { Text.Parsec.Error.ParseError _pos msgs2 ->
                        case msgs2 of wild1 {
                          [] -> wild
                          : ds1 ds2
                          -> case Text.Parsec.Prim.$wsetExpectErrors
                                    _pos
                                    wild1
                                    Parser.definitionHeader2 of ww { (#,#) ww1 ww2 ->
                             Text.Parsec.Error.ParseError ww1 ww2 } } }
                    } in
                    Parser.$wdefinitionHeader1
                      @ u
                      x
                      @ b1
                      s'
                      w1
                      w2
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w3 (Text.Parsec.Error.mergeError err err')))
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    w3
                      (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case Text.Parsec.Prim.$wsetExpectErrors
                              ww1
                              ww2
                              Parser.definitionHeader2 of ww3 { (#,#) ww4 ww5 ->
                       Text.Parsec.Error.ParseError ww4 ww5 } }))) -}
44c1575e39a881bd453dfe166d4ed4a6
  $wdefinitionHeader1 ::
    Interpreter.Value
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
4738f4bf980e9eed867b1475f46cda8a
  $wk ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> u
    -> ((GHC.Base.String, Interpreter.WordP)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
7fb48d4bf568e9c76fb75d11da7ef01f
  $wwordLetter ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 7,
     Strictness: <L,U><L,U><S,U><S,U><S,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
bf57c40294047e9e51ffe539c9723705
  cat :: GHC.Base.Monad f => f [a] -> f [a] -> f [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LC(C(S))LLL),U(A,C(C1(U)),A,C(U),A)><L,U><L,U>,
     Unfolding: (\ @ a
                   @ (f :: * -> *)
                   ($dMonad :: GHC.Base.Monad f)
                   (p :: f [a])
                   (q1 :: f [a]) ->
                 GHC.Base.>>=
                   @ f
                   $dMonad
                   @ [a]
                   @ [a]
                   p
                   (\ (v :: [a]) ->
                    GHC.Base.>>=
                      @ f
                      $dMonad
                      @ [a]
                      @ [a]
                      q1
                      (\ (w :: [a]) ->
                       GHC.Base.return @ f $dMonad @ [a] (GHC.Base.++ @ a v w)))) -}
81a942476fb16766fc5d4eb400e4ac3e
  definition ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      (GHC.Base.String, Interpreter.WordP)
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.definition1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, Interpreter.WordP)>_R)) -}
9cccfc44d0beec5ca53d8194c943b3a6
  definition1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((GHC.Base.String, Interpreter.WordP)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, Interpreter.WordP)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w1 :: (GHC.Base.String, Interpreter.WordP)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: (GHC.Base.String, Interpreter.WordP)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parser.$wdefinition @ u @ b1 w w1 w2 w4) -}
befcd4dd682f659108ddc1740698d9a5
  definition2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DEFINE"#) -}
230aaff51fbea3e74ac557659c6cc43b
  definitionHeader ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.definitionHeader1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
be06742f87384632875c9b081aaaa4be
  definitionHeader1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Parser.$wdefinitionHeader @ u @ b1 w w1 w2 w4) -}
652224948aa5a7c7d08c192344f01921
  definitionHeader2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.definitionHeader3
                   (GHC.Types.[] @ GHC.Base.String)) -}
0461954a2e55bc3ee38d2af79e8d0412
  definitionHeader3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "word"#) -}
8988dbad91cf165b7b8898166fa334ca
  definitionHeader4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ u
                   @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (cok :: Interpreter.Value
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Interpreter.Value
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wmany1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ u
                   @ GHC.Types.Char
                   (Parser.definitionHeader6 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.definitionHeader5
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.definitionHeader5
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
a519c092d299ecbee128025b6000cc74
  definitionHeader5 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (Interpreter.Value
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Interpreter.Value
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
b4533479c85cc7bcc1d3a72f3601a3dc
  definitionHeader6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w1 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Parser.$wwordLetter @ u @ b ww1 ww5 ww6 ww7 ww3 w1 w4 } }) -}
bf3fb58f511c52422055dfd4f3d3ef0c
  instruction ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity Interpreter.Value
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.instruction1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Interpreter.Value>_R)) -}
7cafd932ac28e57bf516b0d5f8a1acb7
  instruction1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
f6542fd7d678581b3ed94d659e26dda5
  nakedQuotation ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      [Interpreter.Value]
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Parser.nakedQuotation1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <[Interpreter.Value]>_R)) -}
7866980b6f7e1f0964d4a2f30afdc113
  nakedQuotation1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ([Interpreter.Value]
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Interpreter.Value]
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ u
                   @ b
                   (w1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (w2 :: [Interpreter.Value]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: [Interpreter.Value]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ Interpreter.Value
                   (Parser.instruction1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <Interpreter.Value>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
d7411eed9f1582171124fc4e4a2ddd14
  number ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity Interpreter.Value
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.number1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Interpreter.Value>_R)) -}
262601509da079f63a6dd25591961698
  number1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ Interpreter.Value
                   (Parser.number3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <Interpreter.Value>_R))
                   (GHC.Types.:
                      @ GHC.Base.String
                      Parser.number2
                      (GHC.Types.[] @ GHC.Base.String))
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
98464e93fbf16d4f640dbf7602f19b9a
  number2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "number"#) -}
e95462306d7da0be70ddb13c4b4e6a03
  number3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
5fd7648de2d3cc6fa8b2402290cb6b4f
  program ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      u
      Data.Functor.Identity.Identity
      ([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.program1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <([(GHC.Base.String, Interpreter.WordP)],
                            [Interpreter.Value])>_R)) -}
77c5a77dd03f5777cd78aa5ac17ab87c
  program1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: ([(GHC.Base.String, Interpreter.WordP)],
                             [Interpreter.Value])
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: ([(GHC.Base.String, Interpreter.WordP)],
                             [Interpreter.Value])
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   eta
                   (\ (x :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.program2
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: ([(GHC.Base.String, Interpreter.WordP)],
                                 [Interpreter.Value]))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.program2
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: ([(GHC.Base.String, Interpreter.WordP)],
                                 [Interpreter.Value]))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
26e6d56fcbb6edaeaab862ac720b2440
  program2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (cok :: ([(GHC.Base.String, Interpreter.WordP)],
                            [Interpreter.Value])
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: ([(GHC.Base.String, Interpreter.WordP)],
                            [Interpreter.Value])
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$wmany
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, Interpreter.WordP)
                   (Parser.definition1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, Interpreter.WordP)>_R))
                   @ b1
                   s1
                   (\ (x :: [(GHC.Base.String, Interpreter.WordP)])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.program3
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: ([(GHC.Base.String, Interpreter.WordP)],
                                 [Interpreter.Value]))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [(GHC.Base.String, Interpreter.WordP)])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.program3
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: ([(GHC.Base.String, Interpreter.WordP)],
                                 [Interpreter.Value]))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
dd8417034fca82a87c1aa84e4954d78d
  program3 ::
    [(GHC.Base.String, Interpreter.WordP)]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (([(GHC.Base.String, Interpreter.WordP)], [Interpreter.Value])
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e789c37387edcbbc290bc39d1f4deab9
  quotation ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity Interpreter.Value
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.quotation1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Interpreter.Value>_R)) -}
15fe20c8b8a0bc58b3624356dfc72774
  quotation1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ Interpreter.Value
                   (Parser.quotation3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <Interpreter.Value>_R))
                   (GHC.Types.:
                      @ GHC.Base.String
                      (Parser.quotation2 @ u)
                      (GHC.Types.[] @ GHC.Base.String))
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
9978fb2db8917338ef9ffa575493144d
  quotation2 :: [GHC.Types.Char]
  {- Unfolding: (\ @ u -> GHC.CString.unpackCString# "quotation"#) -}
4f3aafda2682d30fbd5f757be98511fd
  quotation3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ u
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 (Parser.quotation_m1 @ u)
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <u>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Char>_R)
                   @ b1
                   eta
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.quotation4
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.quotation4
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
1ebd23a86c6466b6fff0bf77c9084c3b
  quotation4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Char.spaces1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   @ b1
                   eta
                   (\ (x :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.quotation5
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x :: ())
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.quotation5
                      @ u
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
9d6640a5208774a97e901ffeba1e8573
  quotation5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (cok :: Interpreter.Value
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Interpreter.Value
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$wmany
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ Interpreter.Value
                   (Parser.instruction1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <Interpreter.Value>_R))
                   @ b1
                   s1
                   (\ (x :: [Interpreter.Value])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.quotation6
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [Interpreter.Value])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.quotation6
                      @ u
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Interpreter.Value)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
5189454ba2682b0bee55fc458f3788f4
  quotation6 ::
    [Interpreter.Value]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] u
       -> (Interpreter.Value
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Interpreter.Value
           -> Text.Parsec.Prim.State [GHC.Types.Char] u
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
f3bb6d3da809536c78becd3843cc353e
  quotation7 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '['#) -}
82bb6783cac2fb55064eefc6c82e7bed
  quotation_m1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Char.char
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.quotation7) -}
4794313c79855785023d346ff1686a3d
  word ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity Interpreter.Value
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.word1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <Interpreter.Value>_R)) -}
57281ebee303ca4303a498a4075ce312
  word1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Interpreter.Value
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (eta1 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Interpreter.Value
                            -> Text.Parsec.Prim.State [GHC.Types.Char] u
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ Interpreter.Value
                   (Parser.definitionHeader4 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <Interpreter.Value>_R))
                   (GHC.Types.:
                      @ GHC.Base.String
                      Parser.definitionHeader3
                      (GHC.Types.[] @ GHC.Base.String))
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
3906fe218fed2ff1bca8c8bd0f09f49d
  wordLetter ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity GHC.Types.Char
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.definitionHeader6
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Char>_R)) -}
"SPEC/Parser $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                          ($dMonad :: GHC.Base.Monad
                                                                        Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = Parser.$s$fStream[]mtok @ tok
"SPEC/Parser $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                     ($dMonad :: GHC.Base.Monad
                                                                                   Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/Parser $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

